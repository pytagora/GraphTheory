# 
# code 4
# graph theory
# magma code
# https://en.wikipedia.org/wiki/Bipartite_graph
# Valentino Skobljanec
#

KBipartitan:=function(m,n)
// m and n has to be at least
if m lt 2 or n lt 2 then 
    // abort programm
    print("Both of the numbers has to be integers and >=2.");
    return false;
end if;
// define graph with m + n vertices and without edges
G:=Graph< m + n | >;
// V are vertices of graph G
V:=Vertices(G);
// each of first m vertices
for i in [1..m] do
    // connect with the rest
    for j in [m + 1..m + n] do
        // add edge in the graph
        AddEdge(~G,V[i],V[j]);
    end for;
end for;
// output graph G
return G;
end function;


> KBipartitan(3,2);
Graph
Vertex  Neighbours

1       4 5 ;
2       4 5 ;
3       4 5 ;
4       1 2 3 ;
5       1 2 3 ;

> KBipartitan(7,5);
Graph
Vertex  Neighbours

1       8 9 10 11 12 ;
2       8 9 10 11 12 ;
3       8 9 10 11 12 ;
4       8 9 10 11 12 ;
5       8 9 10 11 12 ;
6       8 9 10 11 12 ;
7       8 9 10 11 12 ;
8       1 2 3 4 5 6 7 ;
9       1 2 3 4 5 6 7 ;
10      1 2 3 4 5 6 7 ;
11      1 2 3 4 5 6 7 ;
12      1 2 3 4 5 6 7 ;

> KBipartitan(2,2);
Graph
Vertex  Neighbours

1       3 4 ;
2       3 4 ;
3       1 2 ;
4       1 2 ;

> KBipartitan(26,8);
Graph
Vertex  Neighbours

1       27 28 29 30 31 32 33 34 ;
2       27 28 29 30 31 32 33 34 ;
3       27 28 29 30 31 32 33 34 ;
4       27 28 29 30 31 32 33 34 ;
5       27 28 29 30 31 32 33 34 ;
6       27 28 29 30 31 32 33 34 ;
7       27 28 29 30 31 32 33 34 ;
8       27 28 29 30 31 32 33 34 ;
9       27 28 29 30 31 32 33 34 ;
10      27 28 29 30 31 32 33 34 ;
11      27 28 29 30 31 32 33 34 ;
12      27 28 29 30 31 32 33 34 ;
13      27 28 29 30 31 32 33 34 ;
14      27 28 29 30 31 32 33 34 ;
15      27 28 29 30 31 32 33 34 ;
16      27 28 29 30 31 32 33 34 ;
17      27 28 29 30 31 32 33 34 ;
18      27 28 29 30 31 32 33 34 ;
19      27 28 29 30 31 32 33 34 ;
20      27 28 29 30 31 32 33 34 ;
21      27 28 29 30 31 32 33 34 ;
22      27 28 29 30 31 32 33 34 ;
23      27 28 29 30 31 32 33 34 ;
24      27 28 29 30 31 32 33 34 ;
25      27 28 29 30 31 32 33 34 ;
26      27 28 29 30 31 32 33 34 ;
27      1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ;
28      1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ;
29      1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ;
30      1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ;
31      1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ;
32      1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ;
33      1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ;
34      1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ;

> for k in [2..10] do
for> for l in [11..20] do
for|for> KBipartitan(k,l) eq BipartiteGraph(k,l);
for|for> end for;
for> end for;
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
>
